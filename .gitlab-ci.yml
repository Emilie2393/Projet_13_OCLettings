stages:
  - lint
  - test
  - build
  - push
  - deploy

variables:
  IMAGE_NAME: "emilie2393/oc-lettings"
  DOCKER_TAG: $CI_COMMIT_SHORT_SHA # Utilise le hash court du commit comme tag

before_script:
  - python3 -m pip install --upgrade pip
  - python3 -m pip install flake8 pytest

lint:
  stage: lint
  script:
    - echo "Running flake8 linter..."
    - flake8 .  # Analyse tout le code Python dans le répertoire
  allow_failure: false  # Arrête le pipeline en cas d'erreur

test:
  stage: test
  script:
    - echo "Running pytest..."
    - pytest  # Exécute tous les tests dans le projet
  allow_failure: false  # Arrête le pipeline en cas d'erreur

build_image:
  stage: build
  script:
    - docker build -t $IMAGE_NAME:$DOCKER_TAG .
    - docker tag $IMAGE_NAME:$DOCKER_TAG $IMAGE_NAME:latest
  artifacts:
    paths:
      - Dockerfile

push_image:
  stage: push
  script:
    - docker push $IMAGE_NAME:$DOCKER_TAG
    - docker push $IMAGE_NAME:latest

deploy_local:
  stage: deploy
  script:
    - docker pull $IMAGE_NAME:$DOCKER_TAG
    - docker run -d -p 8080:80 $IMAGE_NAME:$DOCKER_TAG
  when: manual  # Déploiement manuel pour éviter de déployer automatiquement
