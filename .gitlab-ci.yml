stages:
  - lint
  - test
  - build
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip_cache"
  PYTHONPATH: "$CI_PROJECT_DIR"
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE: emilie2393/oc_lettings
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip_cache"
  PYTHONPATH: "$CI_PROJECT_DIR"
  CONTAINER_NAME: oc_lettings_site
  RENDER_HOOK: "https://api.render.com/deploy/srv-cuqb62lds78s739ak1g0?key=wrz_P66XA-E"


cache:
  paths:
    - .pip_cache/

linting:
  stage: lint
  image: python:3.9
  before_script:
  - python3 -m venv venv
  - source venv/bin/activate
  - pip install -r requirements.txt
  script:
    - flake8
  allow_failure: false

tests:
  stage: test
  image: python:3.9
  before_script:
  - python3 -m venv venv
  - source venv/bin/activate
  - pip install -r requirements.txt
  script:
    - pytest --cov=oc_lettings_site --cov-report=term-missing --cov-fail-under=80
  coverage: '/^TOTAL.*\s+(\d+)%/'
  allow_failure: false

build_docker_image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  script:
    - echo "Authentification sur Docker Hub"
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - echo "Construction de l'image Docker"
    - docker build -t $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker tag $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA $DOCKER_IMAGE:latest
    - echo "Pousser l'image sur Docker Hub"
    - docker push $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $DOCKER_IMAGE:latest
  only:
    - main
  artifacts:
    paths:
      - Dockerfile

deploy_to_render:
  stage: deploy
  image: alpine:latest  # Utilisation de l'image Alpine
  script:
    - echo "Installation de jq..."
    - apk --no-cache add jq  # Installation de jq

    - echo "V√©rification du dernier d√©ploiement sur Render..."
    
    - |
      LAST_DEPLOY=$(curl -s -X GET "$RENDER_HOOK/deploys" -H "Accept: application/json")
      LAST_STATUS=$(echo $LAST_DEPLOY | jq -r '.[0].status')

      echo "Statut actuel du dernier d√©ploiement : $LAST_STATUS"

    - |
      if [[ "$LAST_STATUS" != "live" ]]; then
        echo "üö® Le dernier d√©ploiement n'est pas en ligne !"
        exit 1
      else
        echo "‚úÖ Le dernier d√©ploiement est bien en ligne !"
      fi
  only:
    - main




